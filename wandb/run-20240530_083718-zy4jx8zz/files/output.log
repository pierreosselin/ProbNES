







Processing algorithm piqEI at seed 0: 100%|█████████████████████████████████████████████████████████████| 15/15 [00:18<00:00,  1.25s/it]








Processing algorithm piqEI at seed 1: 100%|█████████████████████████████████████████████████████████████| 15/15 [00:18<00:00,  1.24s/it]








Processing algorithm piqEI at seed 2: 100%|█████████████████████████████████████████████████████████████| 15/15 [00:19<00:00,  1.30s/it]








Processing algorithm piqEI at seed 3: 100%|█████████████████████████████████████████████████████████████| 15/15 [00:19<00:00,  1.29s/it]







Processing algorithm piqEI at seed 4: 100%|█████████████████████████████████████████████████████████████| 15/15 [00:18<00:00,  1.24s/it]
/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/tools/misc.py:1107: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  result = torch.tensor(data, **kwargs)
Processing algorithm SNES at seed 0:   0%|                                                                       | 0/15 [00:00<?, ?it/s]/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/core.py:3425: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  shares_storage = self._data.storage().data_ptr() == source._data.storage().data_ptr()
Processing algorithm SNES at seed 0:  33%|█████████████████████                                          | 5/15 [00:01<00:02,  4.87it/s]
Processing ./logs/test_function/ackley_noise-0.0_dim-1_initial_bounds-10.0/SNES/var_prior-3.0_batch_size-5 ...
[2024-05-30 08:39:02] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819714711824) -- The `dtype` for the problem's decision variables is set as torch.float32
[2024-05-30 08:39:02] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819714711824) -- `eval_dtype` (the dtype of the fitnesses and evaluation data) is set as torch.float32
[2024-05-30 08:39:02] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819714711824) -- The `device` of the problem is set as cuda:0

Processing algorithm SNES at seed 0:  93%|█████████████████████████████████████████████████████████▊    | 14/15 [00:03<00:00,  4.24it/s]
[2024-05-30 08:39:06] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819551819360) -- The `dtype` for the problem's decision variables is set as torch.float32
[2024-05-30 08:39:06] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819551819360) -- `eval_dtype` (the dtype of the fitnesses and evaluation data) is set as torch.float32
[2024-05-30 08:39:06] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819551819360) -- The `device` of the problem is set as cuda:0
Processing algorithm SNES at seed 0: 100%|██████████████████████████████████████████████████████████████| 15/15 [00:03<00:00,  4.68it/s]
/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/tools/misc.py:1107: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  result = torch.tensor(data, **kwargs)
Processing algorithm SNES at seed 1: 100%|██████████████████████████████████████████████████████████████| 15/15 [00:03<00:00,  4.86it/s]
/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/tools/misc.py:1107: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  result = torch.tensor(data, **kwargs)
Processing algorithm SNES at seed 2:   7%|████▏                                                          | 1/15 [00:00<00:02,  4.77it/s]
[2024-05-30 08:39:09] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819556751616) -- The `dtype` for the problem's decision variables is set as torch.float32
[2024-05-30 08:39:09] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819556751616) -- `eval_dtype` (the dtype of the fitnesses and evaluation data) is set as torch.float32
[2024-05-30 08:39:09] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819556751616) -- The `device` of the problem is set as cuda:0

Processing algorithm SNES at seed 2: 100%|██████████████████████████████████████████████████████████████| 15/15 [00:03<00:00,  4.62it/s]
/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/tools/misc.py:1107: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  result = torch.tensor(data, **kwargs)
Processing algorithm SNES at seed 3:  27%|████████████████▊                                              | 4/15 [00:00<00:02,  4.89it/s]
[2024-05-30 08:39:12] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819724129840) -- The `dtype` for the problem's decision variables is set as torch.float32
[2024-05-30 08:39:12] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819724129840) -- `eval_dtype` (the dtype of the fitnesses and evaluation data) is set as torch.float32
[2024-05-30 08:39:12] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819724129840) -- The `device` of the problem is set as cuda:0

Processing algorithm SNES at seed 3: 100%|██████████████████████████████████████████████████████████████| 15/15 [00:03<00:00,  4.68it/s]
/home/pierre/miniconda3/envs/semisupervised/lib/python3.10/site-packages/evotorch/tools/misc.py:1107: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  result = torch.tensor(data, **kwargs)
Processing algorithm SNES at seed 4:  47%|█████████████████████████████▍                                 | 7/15 [00:01<00:01,  4.92it/s]
[2024-05-30 08:39:16] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819550886192) -- The `dtype` for the problem's decision variables is set as torch.float32
[2024-05-30 08:39:16] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819550886192) -- `eval_dtype` (the dtype of the fitnesses and evaluation data) is set as torch.float32
[2024-05-30 08:39:16] INFO     <26288> evotorch.core: Instance of `Problem` (id:124819550886192) -- The `device` of the problem is set as cuda:0

Processing algorithm SNES at seed 4: 100%|██████████████████████████████████████████████████████████████| 15/15 [00:03<00:00,  4.90it/s]