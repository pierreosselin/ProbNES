problem_name: test_function
save_dir: ./logs/testfunction/rosenbrock_dim2
seed: 0

exp_settings:
  n_exp: 10
  n_iter: 100
  batch_size: 5

bo_settings:
  algorithm: NESWSABI
  beta: 1.
  var_prior: 100.
  num_restarts: 10
  mc_samples: 256
  raw_samples: 512
  ranking_method: nes # Choose among nes, raw 
  quadrature:
    # BQ Modelling
    bq_model: "wsabi"             # select a BQ model from ["wsabi", "vbq"], vbq stands for Vanilla BQ
    sampler_type: "prior"         # select a sampler from ["uncertainty", "prior"]
    kernel_type: "RBF"            # select a kernel from ["RBF", "Matern32", "Matern52"]

    # WSABI modelling
    wsabi_type: "wsabim"          # select a wsabi type from ["wsabil", "wsabim"]
    alpha_factor: 1               # coefficient of alpha in WSABI modelling; alpha: 0.8 * min(y)

    # GP hyperparameter training with type-II MLE
    optimiser: "BoTorch"          # select a optimiser from ["L-BFGS-B", "BoTorch", "Adam"], BoTorch is the slowest but the most accurate
    lik: 1.0e-10                    # centre value of GP likelihood noise.
    rng: 10                       # range of likelihood noise [lik/rng, lik*rng]
    train_lik: False              # flag whether or not to train likelihood noise. if False, the noise is fixed with lik
    training_iter: 1000           # maximum number of SDG interations
    thresh: 0.05                  # stopping criterion. threshold: last_MLL - current_MLL
    lr: 0.1                       # learning rate of Adam

    # RCHQ hyperparameters
    #n_rec: 20000                  # subsampling size for kernel recombination
    n_rec: 2000
    nys_ratio: 1.0e-2               # subsubsampling ratio for Nystrom. Number of Nystrom samples is nys_ratio * n_rec
    #batch_size: 100               # batch size
    batch_size: 5
    quad_ratio: 5                 # supersampling ratio for quadrature. Number of recombination samples is quad_ratio * n_rec

    # Uncertainty sampling
    ratio: 0.5                    # mixing ratio of prior and uncertainty sampling, 0 < r < 1
    n_gaussians: 50               # number of Gaussians approximating the GP-modelled acquisition function
    threshold: 1.0e-5               # threshold to cut off the insignificant Gaussians
    sampling_method: "exact"      # select sampling method from ["exact", "approx"]

    # Utility
    show_progress: True           # flag whether or not show the quadrature result over each iteration.

problem_settings:
  function: "rosenbrock"
  noise: 0.
  dim: 2
  initial_bounds: 10.