problem_name: test_function #test_function, latent_space, uci, hyperparameter_tuning
save_dir: ./logs/test_function_high_dim_rebuttal
seed: 0
verbose_synthesis: 0
gpu: 0
overwrite: True

exp_settings:
  n_exp: 15
  n_iter: 150
  n_init: 5 # Has to be equal to batch size for evo algo

## Change config for algorithm setting
alg_settings:
  algorithm: ["probES", "ES", "s_cmaes"] #["ES", "probES", "qEI", "piqEI", "random"] #["probES", "ES", "random", "qEI", "piqEI"] 
  verbose: 10
  batch_size: 5
  evaluation: "mean" # ["mean", "samples"]
  piqEI:
    beta: 1.
    mean_prior: -1.
    std_prior: 1.
    num_restarts: 10 #For qEI and piqEI
    mc_samples: 256 #For qEI and piqEI
    raw_samples: 512 #For qEI and piqEI
    batch_acq: 5 # Number of batches used to evaluate the acquisition function at the same time
  qEI:
    num_restarts: 10 #For qEI and piqEI
    mc_samples: 256 #For qEI and piqEI
    raw_samples: 512 #For qEI and piqEI
    batch_acq: 5 # Number of batches used to evaluate the acquisition function at the same time
  probES:
    mean_prior: -1.
    std_prior: 1.
    candidates_vr: 1000
    type: ["SNES", "XNES", "CMAES"] # One of ["SNES", "XNES", "CMAES"]
    lr: 1.
    policy: "constant" # ["wolfe", "ei", "ei_bi", "armijo", "constant", "wolfe_ei", "armijo_ei"]
    aqc_type: "random" # ["none", "random", "optimized_bound", "optimized_mahalanobis"] none = random samples, "random" = optimized via random samples, "optimized_bound": optimization on full bounds, "optimized_mahalanobis": optimised on subbounds
    gradient: "expected" # ["expected", "sampled"]
    c1: 0.0001
    c2: 0.9
    t_min: 0.5
    t_max: 2
    budget: 30
    mahalanobis: True
    num_restarts: 10 #For qEI and piqEI
    mc_samples: 256 #For qEI and piqEI
    raw_samples: 512 #For qEI and piqEI
    batch_acq: 5 # Number of batches used to evaluate the acquisition function at the same time
  ES:
    std_prior: 1.
    mean_prior: -1.
    type: ["SNES", "XNES", "CMAES"] # One of ["SNES", "XNES", CMAES]
  random:
    std_prior: 1.
    mean_prior: -1.
  s_cmaes:
    std_prior: 1.
    mean_prior: -1.

problem_settings:
  function: ["ackley", "Griewank", "Levy"]
  noise_std: 0.
  dim: [10, 20, 30] # Irrelevant for latent space problem
  initial_bounds: 10.